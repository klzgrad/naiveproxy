# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# @generated from build/rust/std/BUILD.gn.hbs by tools/crates/gnrt. Do not edit!

import("//build/rust/cargo_crate.gni")

cargo_crate("addr2line") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/addr2line-0.24.2/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/addr2line-0.24.2/src/bin/addr2line.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/addr2line-0.24.2/src/frame.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/addr2line-0.24.2/src/function.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/addr2line-0.24.2/src/lazy.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/addr2line-0.24.2/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/addr2line-0.24.2/src/line.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/addr2line-0.24.2/src/loader.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/addr2line-0.24.2/src/lookup.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/addr2line-0.24.2/src/unit.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2018"
  cargo_pkg_version = "0.24.2"
  cargo_pkg_name = "addr2line"
  cargo_pkg_description =
      "A cross-platform symbolication library written in Rust, using `gimli`"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":compiler_builtins",
    ":gimli",
    ":rustc_std_workspace_alloc",
    ":rustc_std_workspace_core",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  aliased_deps = {
    alloc = ":rustc_std_workspace_alloc"
    core = ":rustc_std_workspace_core"
  }
  features = [
    "alloc",
    "compiler_builtins",
    "core",
    "rustc-dep-of-std",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("adler2") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/adler2-2.0.0/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/adler2-2.0.0/src/algo.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/adler2-2.0.0/src/lib.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "2.0.0"
  cargo_pkg_authors = "Jonas Schievink <jonasschievink@gmail.com>, oyvindln <oyvindln@users.noreply.github.com>"
  cargo_pkg_name = "adler2"
  cargo_pkg_description =
      "A simple clean-room implementation of the Adler-32 checksum"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":compiler_builtins",
    ":rustc_std_workspace_core",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  aliased_deps = {
    core = ":rustc_std_workspace_core"
  }
  features = [
    "compiler_builtins",
    "core",
    "rustc-dep-of-std",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("alloc") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/alloc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/borrow.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/boxed.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/boxed/convert.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/boxed/iter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/boxed/thin.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/bstr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/binary_heap/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/append.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/borrow.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/borrow/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/dedup_sorted_iter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/fix.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/map.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/map/entry.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/map/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/mem.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/merge_iter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/navigate.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/node.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/node/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/remove.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/search.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/set.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/set/entry.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/set/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/set_val.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/btree/split.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/linked_list.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/linked_list/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/vec_deque/drain.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/vec_deque/into_iter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/vec_deque/iter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/vec_deque/iter_mut.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/vec_deque/macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/vec_deque/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/vec_deque/spec_extend.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/vec_deque/spec_from_iter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/collections/vec_deque/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/ffi/c_str.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/ffi/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/fmt.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/lib.miri.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/raw_vec/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/rc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/rc/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/slice.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/str.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/string.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/sync.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/task.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/testing/crash_test.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/testing/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/testing/ord_chaos.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/testing/rng.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/vec/cow.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/vec/drain.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/vec/extract_if.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/vec/in_place_collect.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/vec/in_place_drop.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/vec/into_iter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/vec/is_zero.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/vec/partial_eq.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/vec/set_len_on_drop.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/vec/spec_extend.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/vec/spec_from_elem.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/vec/spec_from_iter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/vec/spec_from_iter_nested.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/alloc/src/vec/splice.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.0.0"
  cargo_pkg_name = "alloc"
  cargo_pkg_description = "The Rust core allocation and collections library"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":compiler_builtins",
    ":core",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("cfg_if") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/cfg-if-1.0.0/src/lib.rs"
  sources = [ "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/cfg-if-1.0.0/src/lib.rs" ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2018"
  cargo_pkg_version = "1.0.0"
  cargo_pkg_authors = "Alex Crichton <alex@alexcrichton.com>"
  cargo_pkg_name = "cfg-if"
  cargo_pkg_description = "A macro to ergonomically define an item depending on a large number of #[cfg] parameters. Structured like an if-else chain, the first matching branch is the item that gets emitted."
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":compiler_builtins",
    ":rustc_std_workspace_core",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  aliased_deps = {
    core = ":rustc_std_workspace_core"
  }
  features = [
    "compiler_builtins",
    "core",
    "rustc-dep-of-std",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("compiler_builtins") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/aarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/aarch64_linux.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/arm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/arm_linux.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/float/add.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/float/cmp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/float/conv.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/float/div.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/float/extend.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/float/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/float/mul.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/float/pow.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/float/sub.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/float/trunc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/hexagon.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/addsub.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/big.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/bswap.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/leading_zeros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/mul.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/sdiv.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/shift.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/specialized_div_rem/asymmetric.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/specialized_div_rem/binary_long.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/specialized_div_rem/delegate.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/specialized_div_rem/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/specialized_div_rem/norm_shift.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/specialized_div_rem/trifecta.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/trailing_zeros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/int/udiv.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/lib.miri.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/math.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/mem/impls.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/mem/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/mem/x86_64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/probestack.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/riscv.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/x86.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/x86_64.rs",
  ]
  inputs = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/acos.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/acosf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/acosh.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/acoshf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/arch/i586.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/arch/i686.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/arch/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/arch/wasm32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/asin.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/asinf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/asinh.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/asinhf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/atan.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/atan2.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/atan2f.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/atanf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/atanh.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/atanhf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/cbrt.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/cbrtf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/ceil.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/ceilf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/copysign.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/copysignf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/copysignf128.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/copysignf16.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/cos.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/cosf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/cosh.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/coshf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/erf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/erff.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/exp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/exp10.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/exp10f.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/exp2.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/exp2f.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/expf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/expm1.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/expm1f.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/expo2.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/fabs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/fabsf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/fabsf128.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/fabsf16.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/fdim.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/fdimf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/fenv.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/floor.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/floorf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/fma.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/fmaf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/fmax.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/fmaxf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/fmin.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/fminf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/fmod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/fmodf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/frexp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/frexpf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/generic/copysign.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/generic/fabs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/generic/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/hypot.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/hypotf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/ilogb.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/ilogbf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/j0.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/j0f.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/j1.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/j1f.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/jn.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/jnf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/k_cos.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/k_cosf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/k_expo2.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/k_expo2f.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/k_sin.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/k_sinf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/k_tan.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/k_tanf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/ldexp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/ldexpf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/lgamma.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/lgamma_r.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/lgammaf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/lgammaf_r.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/log.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/log10.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/log10f.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/log1p.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/log1pf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/log2.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/log2f.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/logf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/modf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/modff.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/nextafter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/nextafterf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/pow.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/powf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/rem_pio2.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/rem_pio2_large.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/rem_pio2f.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/remainder.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/remainderf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/remquo.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/remquof.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/rint.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/rintf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/round.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/roundf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/scalbn.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/scalbnf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/sin.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/sincos.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/sincosf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/sinf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/sinh.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/sinhf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/sqrt.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/sqrtf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/support/float_traits.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/support/hex_float.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/support/int_traits.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/support/macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/support/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/tan.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/tanf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/tanh.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/tanhf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/tgamma.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/tgammaf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/trunc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../libm/src/math/truncf.rs",
  ]
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.1.146"
  cargo_pkg_authors = "Jorge Aparicio <japaricious@gmail.com>"
  cargo_pkg_name = "compiler_builtins"
  cargo_pkg_description = "Compiler intrinsics used by the Rust compiler. Also available for other targets if necessary!"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
    "//build/config/coverage:default_coverage",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":rustc_std_workspace_core",
    "//build/rust/std:std_build_deps",
  ]
  aliased_deps = {
    core = ":rustc_std_workspace_core"
  }
  features = [
    "compiler-builtins",
    "core",
    "rustc-dep-of-std",
  ]
  build_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/build.rs"
  build_sources = [ "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/build.rs" ]
  build_script_inputs = [ "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/compiler_builtins-0.1.146/src/../configure.rs" ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"

  if (current_cpu == "arm64") {
    build_script_outputs = [ "outlined_atomics.rs" ]
  }
}
cargo_crate("core") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/alloc/global.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/alloc/layout.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/alloc/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/any.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/arch.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/array/ascii.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/array/drain.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/array/equality.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/array/iter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/array/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ascii.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ascii/ascii_char.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/asserting.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/async_iter/async_iter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/async_iter/from_iter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/async_iter/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/bool.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/borrow.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/bstr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/cell.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/cell/lazy.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/cell/once.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/char/convert.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/char/decode.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/char/methods.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/char/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/clone.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/clone/uninit.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/cmp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/cmp/bytewise.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/contracts.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/convert/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/convert/num.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/default.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/error.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/escape.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/c_str.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/primitives.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/va_list.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/fmt/builders.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/fmt/float.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/fmt/nofloat.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/fmt/num.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/fmt/rt.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/future/async_drop.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/future/future.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/future/into_future.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/future/join.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/future/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/future/pending.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/future/poll_fn.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/future/ready.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/hash/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/hash/sip.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/hint.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/internal_macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/intrinsics/fallback.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/intrinsics/mir.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/intrinsics/simd.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/io/borrowed_buf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/io/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/array_chunks.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/by_ref_sized.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/chain.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/cloned.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/copied.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/cycle.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/enumerate.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/filter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/filter_map.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/flatten.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/fuse.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/inspect.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/intersperse.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/map.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/map_while.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/map_windows.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/peekable.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/rev.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/scan.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/skip.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/skip_while.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/step_by.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/take.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/take_while.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/adapters/zip.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/range.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/sources.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/sources/empty.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/sources/from_coroutine.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/sources/from_fn.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/sources/once.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/sources/once_with.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/sources/repeat.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/sources/repeat_n.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/sources/repeat_with.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/sources/successors.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/traits/accum.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/traits/double_ended.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/traits/exact_size.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/traits/marker.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/traits/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/iter/traits/unchecked_iterator.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/lib.miri.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/marker.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/marker/variance.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/mem/manually_drop.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/mem/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/mem/transmutability.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/net/display_buffer.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/net/ip_addr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/net/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/net/parser.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/net/socket_addr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/bignum.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/dec2flt/common.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/dec2flt/decimal.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/dec2flt/float.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/dec2flt/fpu.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/dec2flt/lemire.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/dec2flt/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/dec2flt/number.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/dec2flt/parse.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/dec2flt/slow.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/dec2flt/table.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/diy_float.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/error.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/f128.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/f16.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/f32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/f64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/flt2dec/decoder.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/flt2dec/estimator.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/flt2dec/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/flt2dec/strategy/dragon.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/flt2dec/strategy/grisu.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/fmt.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/int_log10.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/int_macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/int_sqrt.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/niche_types.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/nonzero.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/overflow_panic.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/saturating.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/shells/i128.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/shells/i16.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/shells/i32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/shells/i64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/shells/i8.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/shells/int_macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/shells/isize.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/shells/u128.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/shells/u16.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/shells/u32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/shells/u64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/shells/u8.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/shells/usize.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/num/wrapping.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ops/arith.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ops/async_function.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ops/bit.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ops/coroutine.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ops/deref.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ops/drop.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ops/function.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ops/index.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ops/index_range.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ops/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ops/range.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ops/try_trait.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ops/unsize.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/option.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/panic.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/panic/location.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/panic/panic_info.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/panic/unwind_safe.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/panicking.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/pat.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/pin.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/prelude/common.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/prelude/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/primitive.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/primitive_docs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ptr/alignment.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ptr/metadata.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ptr/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ptr/unique.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/random.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/range.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/range/iter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/range/legacy.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/result.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/ascii.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/cmp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/index.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/iter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/iter/macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/memchr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/rotate.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/sort/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/sort/select.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/sort/shared/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/sort/shared/pivot.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/sort/shared/smallsort.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/sort/stable/drift.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/sort/stable/merge.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/sort/stable/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/sort/stable/quicksort.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/sort/stable/tiny.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/sort/unstable/heapsort.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/sort/unstable/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/sort/unstable/quicksort.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/slice/specialize.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/str/converts.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/str/count.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/str/error.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/str/iter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/str/lossy.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/str/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/str/pattern.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/str/traits.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/str/validations.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/sync/atomic.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/sync/exclusive.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/sync/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/task/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/task/poll.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/task/ready.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/task/wake.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/time.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/tuple.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ub_checks.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/unicode/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/unicode/printable.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/unicode/unicode_data.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/unit.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/unsafe_binder.rs",
  ]
  inputs = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/examples/README.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/examples/dot_product.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/examples/matrix_inversion.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/examples/nbody.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/examples/spectral_norm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/alias.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/cast.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/core_simd_docs.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/fmt.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/iter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/lane_count.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/masks/bitmask.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/masks.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/ops/assign.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/ops/deref.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/ops/shift_scalar.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/ops/unary.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/ops.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/select.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/simd/cmp/eq.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/simd/cmp/ord.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/simd/cmp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/simd/num/float.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/simd/num/int.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/simd/num/uint.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/simd/num.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/simd/prelude.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/simd/ptr/const_ptr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/simd/ptr/mut_ptr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/simd/ptr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/swizzle.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/swizzle_dyn.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/to_bytes.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/vector.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/vendor/arm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/vendor/loongarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/vendor/powerpc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/vendor/wasm32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/vendor/x86.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/src/vendor.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/autoderef.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/cast.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/f32_ops.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/f64_ops.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/i16_ops.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/i32_ops.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/i64_ops.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/i8_ops.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/isize_ops.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/layout.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/mask_ops.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/mask_ops_impl/mask16.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/mask_ops_impl/mask32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/mask_ops_impl/mask64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/mask_ops_impl/mask8.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/mask_ops_impl/mask_macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/mask_ops_impl/masksize.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/mask_ops_impl/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/masked_load_store.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/masks.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/ops_macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/pointers.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/round.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/swizzle.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/swizzle_dyn.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/to_bytes.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/try_from_slice.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/u16_ops.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/u32_ops.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/u64_ops.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/u8_ops.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/tests/usize_ops.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../portable-simd/crates/core_simd/webdriver.json",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/MISSING.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/README.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/missing-x86.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/aarch64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/aarch64/mte.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/aarch64/neon/generated.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/aarch64/neon/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/aarch64/prefetch.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/aarch64/test_support.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/aarch64/tme.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm/dsp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm/neon.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm/sat.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm/simd32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/barrier/common.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/barrier/cp15.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/barrier/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/barrier/not_mclass.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/barrier/v8.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/crc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/crypto.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/hints.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/neon/generated.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/neon/load_tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/neon/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/neon/shift_and_insert_tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/neon/store_tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/neon/table_lookup_tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/arm_shared/test_support.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/core_arch_docs.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/loongarch64/lasx/generated.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/loongarch64/lasx/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/loongarch64/lasx/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/loongarch64/lasx/types.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/loongarch64/lsx/generated.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/loongarch64/lsx/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/loongarch64/lsx/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/loongarch64/lsx/types.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/loongarch64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/mips/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/mips/msa.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/nvptx/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/nvptx/packed.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/powerpc/altivec.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/powerpc/macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/powerpc/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/powerpc/vsx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/powerpc64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/powerpc64/vsx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/riscv32/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/riscv32/zk.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/riscv64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/riscv64/zk.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/riscv_shared/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/riscv_shared/p.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/riscv_shared/zb.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/riscv_shared/zk.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/simd.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/v64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/wasm32/atomic.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/wasm32/memory.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/wasm32/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/wasm32/relaxed_simd.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/wasm32/simd128.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/abm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/adx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/aes.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/avx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/avx2.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512f.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/avxneconvert.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/bmi1.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/bmi2.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/bswap.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/bt.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/cpuid.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/eflags.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/f16c.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/fma.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/fxsr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/gfni.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/pclmulqdq.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/rdrand.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/rdtsc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/rtm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/sha.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/sse.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/sse3.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/sse41.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/sse42.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/sse4a.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/ssse3.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/tbm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/test.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/vaes.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/vpclmulqdq.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86/xsave.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/abm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/adx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/amx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/avx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/avx512bw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/bswap.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/bt.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/cmpxchg16b.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/fxsr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/rdrand.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/sse.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/sse41.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/sse42.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/../../stdarch/crates/core_arch/src/x86_64/xsave.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/error.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/c_char.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/c_double.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/c_float.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/c_int.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/c_long.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/c_longlong.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/c_schar.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/c_short.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/c_uchar.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/c_uint.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/c_ulong.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/c_ulonglong.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/c_ushort.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/ffi/c_void.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/fmt/fmt_trait_method_doc.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/core/src/macros/panic.md",
  ]
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.0.0"
  cargo_pkg_name = "core"
  cargo_pkg_description = "The Rust Core Library"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
    "//build/config/coverage:default_coverage",
  ]
  library_configs += [
    "//build/config/compiler:no_chromium_code",
    "//build/rust:panic_immediate_abort",
  ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [ "//build/rust/std:std_build_deps" ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("getopts") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/getopts-0.2.21/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/getopts-0.2.21/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/getopts-0.2.21/src/tests/mod.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2015"
  cargo_pkg_version = "0.2.21"
  cargo_pkg_authors = "The Rust Project Developers"
  cargo_pkg_name = "getopts"
  cargo_pkg_description = "getopts-like option parsing."
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":rustc_std_workspace_core",
    ":rustc_std_workspace_std",
    ":unicode_width",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  aliased_deps = {
    core = ":rustc_std_workspace_core"
    std = ":rustc_std_workspace_std"
  }
  features = [
    "core",
    "rustc-dep-of-std",
    "std",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("gimli") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/arch.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/common.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/constants.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/endianity.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/leb128.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/abbrev.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/addr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/aranges.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/cfi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/dwarf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/endian_reader.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/endian_slice.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/index.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/line.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/lists.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/loclists.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/lookup.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/op.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/pubnames.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/pubtypes.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/reader.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/relocate.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/rnglists.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/str.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/unit.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/util.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/read/value.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/test_util.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/write/abbrev.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/write/cfi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/write/dwarf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/write/endian_vec.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/write/line.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/write/loc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/write/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/write/op.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/write/range.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/write/relocate.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/write/section.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/write/str.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/write/unit.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/gimli-0.31.1/src/write/writer.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2018"
  cargo_pkg_version = "0.31.1"
  cargo_pkg_name = "gimli"
  cargo_pkg_description =
      "A library for reading and writing the DWARF debugging format."
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":compiler_builtins",
    ":rustc_std_workspace_alloc",
    ":rustc_std_workspace_core",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  aliased_deps = {
    alloc = ":rustc_std_workspace_alloc"
    core = ":rustc_std_workspace_core"
  }
  features = [
    "read",
    "read-core",
    "rustc-dep-of-std",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("hashbrown") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/control/bitmask.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/control/group/generic.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/control/group/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/control/group/neon.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/control/group/sse2.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/control/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/control/tag.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/external_trait_impls/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/external_trait_impls/rayon/helpers.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/external_trait_impls/rayon/map.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/external_trait_impls/rayon/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/external_trait_impls/rayon/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/external_trait_impls/rayon/set.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/external_trait_impls/rayon/table.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/external_trait_impls/serde.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/map.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/raw/alloc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/raw/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/raw_entry.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/rustc_entry.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/scopeguard.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/set.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/table.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/hashbrown-0.15.2/src/util.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.15.2"
  cargo_pkg_authors = "Amanieu d'Antras <amanieu@gmail.com>"
  cargo_pkg_name = "hashbrown"
  cargo_pkg_description = "A Rust port of Google's SwissTable hash map"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":compiler_builtins",
    ":rustc_std_workspace_alloc",
    ":rustc_std_workspace_core",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  aliased_deps = {
    alloc = ":rustc_std_workspace_alloc"
    core = ":rustc_std_workspace_core"
  }
  features = [
    "alloc",
    "compiler_builtins",
    "core",
    "nightly",
    "raw-entry",
    "rustc-dep-of-std",
    "rustc-internal-api",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("libc") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/fixed_width_ints.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/fuchsia/aarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/fuchsia/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/fuchsia/riscv64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/fuchsia/x86_64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/hermit.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/psp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/sgx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/solid/aarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/solid/arm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/solid/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/switch.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/teeos/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/trusty.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/aix/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/aix/powerpc64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/apple/b32/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/apple/b64/aarch64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/apple/b64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/apple/b64/x86_64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/apple/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/dragonfly/errno.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/dragonfly/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/aarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/arm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/freebsd11/b32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/freebsd11/b64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/freebsd11/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/freebsd12/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/freebsd12/x86_64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/freebsd13/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/freebsd13/x86_64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/freebsd14/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/freebsd14/x86_64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/freebsd15/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/freebsd15/x86_64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/powerpc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/powerpc64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/riscv64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/x86.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/freebsd/x86_64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/freebsdlike/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/netbsd/aarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/netbsd/arm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/netbsd/mips.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/netbsd/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/netbsd/powerpc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/netbsd/riscv64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/netbsd/sparc64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/netbsd/x86.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/netbsd/x86_64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/openbsd/aarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/openbsd/arm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/openbsd/mips64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/openbsd/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/openbsd/powerpc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/openbsd/powerpc64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/openbsd/riscv64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/openbsd/sparc64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/openbsd/x86.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/bsd/netbsdlike/openbsd/x86_64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/haiku/b32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/haiku/b64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/haiku/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/haiku/native.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/haiku/x86_64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/hurd/b32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/hurd/b64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/hurd/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/android/b32/arm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/android/b32/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/android/b32/x86/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/android/b64/aarch64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/android/b64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/android/b64/riscv64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/android/b64/x86_64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/android/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/emscripten/lfs64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/emscripten/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/arch/generic/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/arch/mips/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/arch/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/arch/powerpc/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/arch/sparc/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b32/arm/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b32/csky/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b32/m68k/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b32/mips/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b32/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b32/powerpc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b32/riscv32/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b32/sparc/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b32/x86/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b64/aarch64/ilp32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b64/aarch64/lp64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b64/aarch64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b64/loongarch64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b64/mips64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b64/powerpc64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b64/riscv64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b64/s390x.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b64/sparc64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/b64/x86_64/x32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/gnu/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/b32/arm/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/b32/hexagon.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/b32/mips/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/b32/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/b32/powerpc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/b32/riscv32/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/b32/x86/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/b64/aarch64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/b64/loongarch64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/b64/mips64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/b64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/b64/powerpc64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/b64/riscv64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/b64/s390x.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/b64/x86_64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/lfs64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/musl/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/uclibc/arm/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/uclibc/mips/mips32/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/uclibc/mips/mips64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/uclibc/mips/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/uclibc/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/uclibc/x86_64/l4re.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/uclibc/x86_64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/linux/uclibc/x86_64/other.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/linux_like/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/newlib/aarch64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/newlib/arm/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/newlib/espidf/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/newlib/generic.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/newlib/horizon/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/newlib/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/newlib/powerpc/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/newlib/rtems/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/newlib/vita/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/nto/aarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/nto/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/nto/neutrino.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/nto/x86_64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/nuttx/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/redox/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/solarish/compat.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/solarish/illumos.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/solarish/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/solarish/solaris.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/solarish/x86.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/solarish/x86_64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/unix/solarish/x86_common.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/vxworks/aarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/vxworks/arm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/vxworks/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/vxworks/powerpc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/vxworks/powerpc64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/vxworks/riscv32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/vxworks/riscv64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/vxworks/x86.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/vxworks/x86_64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/wasi/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/wasi/p2.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/windows/gnu/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/windows/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/windows/msvc/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/src/xous.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.2.169"
  cargo_pkg_authors = "The Rust Project Developers"
  cargo_pkg_name = "libc"
  cargo_pkg_description = "Raw FFI bindings to platform libraries like libc."
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
    "//build/config/coverage:default_coverage",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":rustc_std_workspace_core",
    "//build/rust/std:std_build_deps",
  ]
  features = [
    "align",
    "rustc-dep-of-std",
    "rustc-std-workspace-core",
  ]
  build_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/build.rs"
  build_sources = [ "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/libc-0.2.169/build.rs" ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("memchr") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/aarch64/memchr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/aarch64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/aarch64/neon/memchr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/aarch64/neon/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/aarch64/neon/packedpair.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/all/memchr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/all/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/all/packedpair/default_rank.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/all/packedpair/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/all/rabinkarp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/all/shiftor.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/all/twoway.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/generic/memchr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/generic/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/generic/packedpair.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/wasm32/memchr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/wasm32/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/wasm32/simd128/memchr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/wasm32/simd128/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/wasm32/simd128/packedpair.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/x86_64/avx2/memchr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/x86_64/avx2/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/x86_64/avx2/packedpair.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/x86_64/memchr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/x86_64/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/x86_64/sse2/memchr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/x86_64/sse2/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/arch/x86_64/sse2/packedpair.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/cow.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/ext.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/memchr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/memmem/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/memmem/searcher.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/tests/memchr/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/tests/memchr/naive.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/tests/memchr/prop.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/tests/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/tests/packedpair.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/tests/substring/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/tests/substring/naive.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/tests/substring/prop.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/memchr-2.7.4/src/vector.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "2.7.4"
  cargo_pkg_authors = "Andrew Gallant <jamslam@gmail.com>, bluss"
  cargo_pkg_name = "memchr"
  cargo_pkg_description = "Provides extremely fast (uses SIMD on x86_64, aarch64 and wasm32) routines for 1, 2 or 3 byte search and single substring search."
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":compiler_builtins",
    ":rustc_std_workspace_core",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  aliased_deps = {
    core = ":rustc_std_workspace_core"
  }
  features = [
    "compiler_builtins",
    "core",
    "rustc-dep-of-std",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("miniz_oxide") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/miniz_oxide-0.8.3/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/miniz_oxide-0.8.3/src/deflate/buffer.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/miniz_oxide-0.8.3/src/deflate/core.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/miniz_oxide-0.8.3/src/deflate/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/miniz_oxide-0.8.3/src/deflate/stored.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/miniz_oxide-0.8.3/src/deflate/stream.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/miniz_oxide-0.8.3/src/deflate/zlib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/miniz_oxide-0.8.3/src/inflate/core.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/miniz_oxide-0.8.3/src/inflate/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/miniz_oxide-0.8.3/src/inflate/output_buffer.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/miniz_oxide-0.8.3/src/inflate/stream.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/miniz_oxide-0.8.3/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/miniz_oxide-0.8.3/src/shared.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.8.3"
  cargo_pkg_authors = "Frommi <daniil.liferenko@gmail.com>, oyvindln <oyvindln@users.noreply.github.com>, Rich Geldreich richgel99@gmail.com"
  cargo_pkg_name = "miniz_oxide"
  cargo_pkg_description = "DEFLATE compression and decompression library rewritten in Rust based on miniz"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":adler2",
    ":compiler_builtins",
    ":rustc_std_workspace_alloc",
    ":rustc_std_workspace_core",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  aliased_deps = {
    alloc = ":rustc_std_workspace_alloc"
    core = ":rustc_std_workspace_core"
  }
  features = [
    "alloc",
    "compiler_builtins",
    "core",
    "rustc-dep-of-std",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("object") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/archive.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/build/bytes.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/build/elf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/build/error.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/build/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/build/table.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/common.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/elf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/endian.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/macho.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/pe.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/pod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/any.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/archive.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/coff/comdat.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/coff/file.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/coff/import.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/coff/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/coff/relocation.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/coff/section.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/coff/symbol.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/elf/attributes.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/elf/comdat.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/elf/compression.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/elf/dynamic.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/elf/file.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/elf/hash.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/elf/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/elf/note.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/elf/relocation.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/elf/section.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/elf/segment.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/elf/symbol.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/elf/version.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/gnu_compression.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/macho/dyld_cache.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/macho/fat.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/macho/file.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/macho/load_command.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/macho/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/macho/relocation.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/macho/section.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/macho/segment.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/macho/symbol.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/pe/data_directory.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/pe/export.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/pe/file.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/pe/import.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/pe/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/pe/relocation.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/pe/resource.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/pe/rich.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/pe/section.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/read_cache.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/read_ref.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/traits.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/util.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/wasm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/xcoff/comdat.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/xcoff/file.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/xcoff/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/xcoff/relocation.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/xcoff/section.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/xcoff/segment.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/read/xcoff/symbol.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/write/coff/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/write/coff/object.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/write/coff/writer.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/write/elf/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/write/elf/object.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/write/elf/writer.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/write/macho.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/write/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/write/pe.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/write/string.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/write/util.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/write/xcoff.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/src/xcoff.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2018"
  cargo_pkg_version = "0.36.7"
  cargo_pkg_name = "object"
  cargo_pkg_description =
      "A unified interface for reading and writing object file formats."
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":compiler_builtins",
    ":memchr",
    ":rustc_std_workspace_alloc",
    ":rustc_std_workspace_core",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  aliased_deps = {
    alloc = ":rustc_std_workspace_alloc"
    core = ":rustc_std_workspace_core"
  }
  features = [
    "alloc",
    "archive",
    "coff",
    "compiler_builtins",
    "core",
    "elf",
    "macho",
    "pe",
    "read_core",
    "rustc-dep-of-std",
    "unaligned",
    "xcoff",
  ]
  build_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/build.rs"
  build_sources = [ "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/object-0.36.7/build.rs" ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("panic_abort") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/panic_abort/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/panic_abort/src/android.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/panic_abort/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/panic_abort/src/zkvm.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.0.0"
  cargo_pkg_name = "panic_abort"
  cargo_pkg_description = "Implementation of Rust panics via process aborts"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":alloc",
    ":cfg_if",
    ":compiler_builtins",
    ":core",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  if (!is_win) {
    deps += [ ":libc" ]
  }
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("panic_unwind") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/panic_unwind/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/panic_unwind/src/dummy.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/panic_unwind/src/emcc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/panic_unwind/src/gcc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/panic_unwind/src/hermit.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/panic_unwind/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/panic_unwind/src/miri.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/panic_unwind/src/seh.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.0.0"
  cargo_pkg_name = "panic_unwind"
  cargo_pkg_description = "Implementation of Rust panics via stack unwinding"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":alloc",
    ":cfg_if",
    ":compiler_builtins",
    ":core",
    ":unwind",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  if (!is_win) {
    deps += [ ":libc" ]
  }
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("proc_macro") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/bridge/arena.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/bridge/buffer.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/bridge/client.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/bridge/closure.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/bridge/fxhash.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/bridge/handle.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/bridge/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/bridge/rpc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/bridge/selfless_reify.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/bridge/server.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/bridge/symbol.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/diagnostic.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/escape.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/quote.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/proc_macro/src/to_tokens.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.0.0"
  cargo_pkg_name = "proc_macro"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":core",
    ":std",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("profiler_builtins") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/profiler_builtins/src/lib.rs"
  sources = [ "//third_party/rust-toolchain/lib/rustlib/src/rust/library/profiler_builtins/src/lib.rs" ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.0.0"
  cargo_pkg_name = "profiler_builtins"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
    "//build/config/coverage:default_coverage",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [ "//build/rust/std:std_build_deps" ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("rustc_demangle") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/rustc-demangle-0.1.24/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/rustc-demangle-0.1.24/src/legacy.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/rustc-demangle-0.1.24/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/rustc-demangle-0.1.24/src/v0.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2015"
  cargo_pkg_version = "0.1.24"
  cargo_pkg_authors = "Alex Crichton <alex@alexcrichton.com>"
  cargo_pkg_name = "rustc-demangle"
  cargo_pkg_description = "Rust compiler symbol demangling."
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":compiler_builtins",
    ":rustc_std_workspace_core",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  aliased_deps = {
    core = ":rustc_std_workspace_core"
  }
  features = [
    "compiler_builtins",
    "core",
    "rustc-dep-of-std",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("rustc_std_workspace_alloc") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/rustc-std-workspace-alloc/lib.rs"
  sources = [ "//third_party/rust-toolchain/lib/rustlib/src/rust/library/rustc-std-workspace-alloc/lib.rs" ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "1.99.0"
  cargo_pkg_name = "rustc-std-workspace-alloc"
  cargo_pkg_description = "Hack for the compiler's own build system"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
    "//build/config/coverage:default_coverage",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":alloc",
    "//build/rust/std:std_build_deps",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("rustc_std_workspace_core") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/rustc-std-workspace-core/lib.rs"
  sources = [ "//third_party/rust-toolchain/lib/rustlib/src/rust/library/rustc-std-workspace-core/lib.rs" ]
  inputs = [ "//third_party/rust-toolchain/lib/rustlib/src/rust/library/rustc-std-workspace-core/README.md" ]
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "1.99.0"
  cargo_pkg_name = "rustc-std-workspace-core"
  cargo_pkg_description = "Hack for the compiler's own build system"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
    "//build/config/coverage:default_coverage",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":core",
    "//build/rust/std:std_build_deps",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("rustc_std_workspace_std") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/rustc-std-workspace-std/lib.rs"
  sources = [ "//third_party/rust-toolchain/lib/rustlib/src/rust/library/rustc-std-workspace-std/lib.rs" ]
  inputs = [ "//third_party/rust-toolchain/lib/rustlib/src/rust/library/rustc-std-workspace-std/README.md" ]
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "1.99.0"
  cargo_pkg_name = "rustc-std-workspace-std"
  cargo_pkg_description = "Hack for the compiler's own build system"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":std",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("std") {
  crate_type = "rlib"
  crate_root =
      "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/alloc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/ascii.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/backtrace.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/backtrace/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/bstr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/collections/hash/map/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/collections/hash/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/collections/hash/set.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/collections/hash/set/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/collections/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/env.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/error.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/f128.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/f16.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/f32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/f64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/ffi/c_str.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/ffi/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/ffi/os_str.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/ffi/os_str/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/fs/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/hash/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/hash/random.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/buffered/bufreader.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/buffered/bufreader/buffer.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/buffered/bufwriter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/buffered/linewriter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/buffered/linewritershim.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/buffered/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/buffered/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/copy.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/copy/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/cursor.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/cursor/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/error.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/error/repr_bitpacked.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/error/repr_unpacked.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/error/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/impls.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/impls/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/pipe.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/pipe/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/prelude.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/stdio.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/stdio/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/util.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/io/util/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/keyword_docs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/lib.miri.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/net/ip_addr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/net/ip_addr/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/net/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/net/socket_addr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/net/socket_addr/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/net/tcp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/net/tcp/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/net/test.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/net/udp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/net/udp/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/num.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/aix/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/aix/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/aix/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/android/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/android/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/android/net.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/android/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/darwin/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/darwin/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/darwin/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/dragonfly/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/dragonfly/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/dragonfly/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/emscripten/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/emscripten/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/emscripten/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/espidf/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/espidf/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/espidf/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/fd/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/fd/net.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/fd/owned.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/fd/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/fd/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/fortanix_sgx/arch.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/fortanix_sgx/ffi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/fortanix_sgx/io.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/fortanix_sgx/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/freebsd/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/freebsd/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/freebsd/net.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/freebsd/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/fuchsia/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/fuchsia/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/fuchsia/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/haiku/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/haiku/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/haiku/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/hermit/ffi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/hermit/io/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/hermit/io/net.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/hermit/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/horizon/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/horizon/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/horizon/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/hurd/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/hurd/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/hurd/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/illumos/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/illumos/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/illumos/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/ios/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/l4re/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/l4re/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/l4re/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/linux/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/linux/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/linux/net.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/linux/process.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/linux/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/macos/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/net/linux_ext/addr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/net/linux_ext/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/net/linux_ext/socket.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/net/linux_ext/tcp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/net/linux_ext/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/net/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/netbsd/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/netbsd/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/netbsd/net.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/netbsd/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/nto/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/nto/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/nto/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/nuttx/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/nuttx/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/nuttx/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/openbsd/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/openbsd/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/openbsd/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/raw/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/raw/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/redox/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/redox/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/redox/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/rtems/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/rtems/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/rtems/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/solaris/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/solaris/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/solaris/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/solid/ffi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/solid/io.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/solid/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/uefi/env.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/uefi/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/ffi/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/ffi/os_str.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/fs/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/io/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/io/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/net/addr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/net/ancillary.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/net/datagram.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/net/listener.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/net/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/net/stream.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/net/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/net/ucred.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/net/ucred/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/process.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/unix/thread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/vita/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/vita/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/vita/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/vxworks/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/vxworks/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/vxworks/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/wasi/ffi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/wasi/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/wasi/io/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/wasi/io/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/wasi/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/wasi/net/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/wasip2/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/windows/ffi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/windows/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/windows/io/handle.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/windows/io/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/windows/io/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/windows/io/socket.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/windows/io/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/windows/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/windows/process.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/windows/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/windows/thread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/xous/ffi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/xous/ffi/definitions.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/xous/ffi/definitions/memoryflags.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/xous/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/xous/services.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/xous/services/dns.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/xous/services/log.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/xous/services/net.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/xous/services/systime.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/os/xous/services/ticktimer.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/panic.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/panicking.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/pat.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/path.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/prelude/common.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/prelude/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/process.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/process/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/random.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/rt.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/barrier.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/lazy_lock.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/mpmc/array.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/mpmc/context.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/mpmc/counter.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/mpmc/error.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/mpmc/list.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/mpmc/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/mpmc/select.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/mpmc/utils.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/mpmc/waker.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/mpmc/zero.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/mpsc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/once_lock.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/poison.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/poison/condvar.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/poison/mutex.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/poison/once.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/poison/rwlock.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sync/reentrant_lock.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/alloc/hermit.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/alloc/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/alloc/sgx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/alloc/solid.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/alloc/uefi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/alloc/unix.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/alloc/wasm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/alloc/windows.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/alloc/windows/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/alloc/xous.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/alloc/zkvm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/anonymous_pipe/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/anonymous_pipe/unix.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/anonymous_pipe/unsupported.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/anonymous_pipe/windows.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/backtrace.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/cmath.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/exit_guard.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/io/io_slice/iovec.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/io/io_slice/unsupported.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/io/io_slice/wasi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/io/io_slice/windows.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/io/is_terminal/hermit.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/io/is_terminal/isatty.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/io/is_terminal/unsupported.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/io/is_terminal/windows.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/io/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/sgx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/socket.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/socket/hermit.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/socket/solid.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/socket/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/socket/unix.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/socket/wasip2.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/socket/windows.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/uefi/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/unsupported.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/wasip1.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/xous/dns.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/xous/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/xous/tcplistener.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/xous/tcpstream.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/connection/xous/udp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/net/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/os_str/bytes.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/os_str/bytes/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/os_str/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/os_str/wtf8.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/common/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/common/small_c_string.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/common/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/hermit/args.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/hermit/env.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/hermit/fd.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/hermit/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/hermit/futex.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/hermit/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/hermit/os.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/hermit/stdio.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/hermit/thread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/hermit/time.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/itron/abi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/itron/error.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/itron/spin.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/itron/task.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/itron/thread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/itron/thread_parking.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/itron/time.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/itron/time/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/abi/mem.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/abi/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/abi/panic.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/abi/reloc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/abi/thread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/abi/tls/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/abi/tls/sync_bitset.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/abi/tls/sync_bitset/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/abi/usercalls/alloc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/abi/usercalls/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/abi/usercalls/raw.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/abi/usercalls/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/args.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/env.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/fd.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/libunwind_integration.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/os.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/stdio.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/thread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/thread_parking.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/time.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/waitqueue/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/waitqueue/spin_mutex.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/waitqueue/spin_mutex/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/waitqueue/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/waitqueue/unsafe_list.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/sgx/waitqueue/unsafe_list/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/solid/abi/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/solid/abi/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/solid/abi/sockets.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/solid/env.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/solid/error.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/solid/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/solid/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/solid/os.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/solid/stdio.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/solid/time.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/teeos/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/teeos/os.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/teeos/stdio.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/teeos/thread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/uefi/args.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/uefi/env.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/uefi/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/uefi/helpers.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/uefi/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/uefi/os.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/uefi/process.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/uefi/stdio.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/uefi/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/uefi/thread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/uefi/time.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/args.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/env.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/fd.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/fd/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/fs/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/futex.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/kernel_copy.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/kernel_copy/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/linux/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/linux/pidfd.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/linux/pidfd/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/os.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/os/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/pipe.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/process/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/process/process_common.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/process/process_common/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/process/process_fuchsia.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/process/process_unix.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/process/process_unix/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/process/process_unsupported.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/process/process_unsupported/wait_status.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/process/process_unsupported/wait_status/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/process/process_vxworks.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/process/zircon.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/stack_overflow.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/stdio.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/sync/condvar.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/sync/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/sync/mutex.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/thread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/thread_parking.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/time.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unix/weak.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unsupported/args.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unsupported/common.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unsupported/env.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unsupported/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unsupported/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unsupported/os.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unsupported/pipe.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unsupported/process.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unsupported/stdio.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unsupported/thread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/unsupported/time.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasi/args.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasi/env.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasi/fd.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasi/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasi/helpers.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasi/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasi/os.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasi/stdio.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasi/thread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasi/time.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasip2/cabi_realloc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasip2/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasm/atomics/futex.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasm/atomics/thread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasm/env.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/wasm/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/api.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/api/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/args.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/args/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/c.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/c/windows_sys.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/compat.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/env.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/fs/remove_dir_all.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/futex.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/handle.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/handle/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/os.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/os/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/pipe.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/process.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/process/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/stack_overflow.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/stack_overflow_uwp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/stdio.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/stdio/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/thread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/time.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/xous/args.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/xous/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/xous/os.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/xous/os/params.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/xous/os/params/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/xous/stdio.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/xous/thread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/xous/time.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/zkvm/abi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/zkvm/args.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/zkvm/env.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/zkvm/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/zkvm/os.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/zkvm/stdio.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/path/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/path/sgx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/path/uefi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/path/unix.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/path/unsupported_backslash.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/path/windows.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/path/windows/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/personality/dwarf/eh.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/personality/dwarf/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/personality/dwarf/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/personality/emcc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/personality/gcc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/personality/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/apple.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/arc4random.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/espidf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/fuchsia.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/getentropy.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/hermit.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/horizon.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/linux.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/redox.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/sgx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/solid.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/teeos.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/uefi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/unix_legacy.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/unsupported.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/vxworks.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/wasi.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/windows.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/random/zkvm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/condvar/futex.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/condvar/itron.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/condvar/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/condvar/no_threads.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/condvar/pthread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/condvar/sgx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/condvar/windows7.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/condvar/xous.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/mutex/fuchsia.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/mutex/futex.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/mutex/itron.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/mutex/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/mutex/no_threads.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/mutex/pthread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/mutex/sgx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/mutex/windows7.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/mutex/xous.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/once/futex.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/once/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/once/no_threads.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/once/queue.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/once_box.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/rwlock/futex.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/rwlock/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/rwlock/no_threads.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/rwlock/queue.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/rwlock/solid.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/rwlock/teeos.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/thread_parking/darwin.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/thread_parking/futex.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/thread_parking/id.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/thread_parking/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/thread_parking/pthread.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/thread_parking/unsupported.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/thread_parking/windows7.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/sync/thread_parking/xous.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/destructors/linux_like.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/destructors/list.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/guard/apple.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/guard/key.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/guard/solid.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/guard/windows.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/key/racy.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/key/sgx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/key/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/key/unix.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/key/windows.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/key/xous.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/eager.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/lazy.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/os.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/thread_local/statik.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys_common/fs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys_common/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys_common/process.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys_common/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys_common/wstr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys_common/wtf8.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys_common/wtf8/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/test_helpers.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/thread/current.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/thread/local.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/thread/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/thread/scoped.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/thread/spawnhook.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/thread/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/time.rs",
  ]
  inputs = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/backtrace/dbghelp32.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/backtrace/dbghelp64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/backtrace/libunwind.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/backtrace/miri.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/backtrace/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/backtrace/noop.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/capture.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/dbghelp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/print/fuchsia.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/print.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/dbghelp.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/coff.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/elf.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/libs_aix.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/libs_dl_iterate_phdr.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/libs_haiku.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/libs_illumos.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/libs_libnx.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/libs_macos.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/libs_windows.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/lru.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/macho.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/mmap_fake.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/mmap_unix.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/mmap_windows.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/parse_running_mmaps_unix.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/stash.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli/xcoff.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/gimli.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/miri.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/symbolize/noop.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/types.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../backtrace/src/windows_sys.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/error.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/ffi/c_char.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/ffi/c_double.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/ffi/c_float.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/ffi/c_int.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/ffi/c_long.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/ffi/c_longlong.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/ffi/c_schar.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/ffi/c_short.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/ffi/c_uchar.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/ffi/c_uint.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/ffi/c_ulong.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/ffi/c_ulonglong.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/ffi/c_ushort.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/ffi/c_void.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/fmt/fmt_trait_method_doc.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/macros/panic.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../core/src/primitive_docs.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../portable-simd/crates/core_simd/src/core_simd_docs.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../portable-simd/crates/std_float/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/../../stdarch/crates/core_arch/src/core_arch_docs.md",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/src/sys/pal/windows/c/README.md",
  ]
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.0.0"
  cargo_pkg_name = "std"
  cargo_pkg_description = "The Rust Standard Library"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [
    "//build/config/compiler:no_chromium_code",
    "//build/rust:panic_immediate_abort",
  ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":alloc",
    ":cfg_if",
    ":compiler_builtins",
    ":core",
    ":hashbrown",
    ":panic_abort",
    ":panic_unwind",
    ":rustc_demangle",
    ":std_detect",
    ":unwind",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  if (!is_win) {
    deps += [
      ":addr2line",
      ":libc",
      ":miniz_oxide",
      ":object",
    ]
  }
  if (is_win) {
    deps += [ ":windows_targets" ]
  }
  features = [
    "addr2line",
    "backtrace",
    "miniz_oxide",
    "object",
    "panic_unwind",
    "std_detect_dlsym_getauxval",
    "std_detect_file_io",
  ]
  build_root =
      "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/build.rs"
  build_sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/std/build.rs",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("std_detect") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/arch/aarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/arch/arm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/arch/loongarch.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/arch/mips.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/arch/mips64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/arch/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/arch/powerpc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/arch/powerpc64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/arch/riscv.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/arch/x86.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/bit.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/cache.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/macros.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/aarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/darwin/aarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/freebsd/aarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/freebsd/arm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/freebsd/auxvec.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/freebsd/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/freebsd/powerpc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/linux/aarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/linux/arm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/linux/auxvec.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/linux/cpuinfo.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/linux/loongarch.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/linux/mips.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/linux/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/linux/powerpc.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/linux/riscv.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/openbsd/aarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/other.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/windows/aarch64.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/detect/os/x86.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/stdarch/crates/std_detect/src/lib.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.1.5"
  cargo_pkg_authors = "Alex Crichton <alex@alexcrichton.com>, Andrew Gallant <jamslam@gmail.com>, Gonzalo Brito Gadeschi <gonzalobg88@gmail.com>"
  cargo_pkg_name = "std_detect"
  cargo_pkg_description =
      "`std::detect` - Rust's standard library run-time CPU feature detection."
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":cfg_if",
    ":compiler_builtins",
    ":rustc_std_workspace_alloc",
    ":rustc_std_workspace_core",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  if (!is_win) {
    deps += [ ":libc" ]
  }
  aliased_deps = {
    alloc = ":rustc_std_workspace_alloc"
    core = ":rustc_std_workspace_core"
  }
  features = [
    "alloc",
    "compiler_builtins",
    "core",
    "libc",
    "rustc-dep-of-std",
    "std_detect_dlsym_getauxval",
    "std_detect_file_io",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("test") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/bench.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/cli.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/console.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/event.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/formatters/json.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/formatters/junit.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/formatters/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/formatters/pretty.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/formatters/terse.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/helpers/concurrency.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/helpers/metrics.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/helpers/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/helpers/shuffle.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/options.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/stats.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/stats/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/term.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/term/terminfo/mod.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/term/terminfo/parm.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/term/terminfo/parm/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/term/terminfo/parser/compiled.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/term/terminfo/parser/compiled/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/term/terminfo/searcher.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/term/terminfo/searcher/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/term/win.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/test_result.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/tests.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/time.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/test/src/types.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.0.0"
  cargo_pkg_name = "test"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":core",
    ":getopts",
    ":std",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  if (!is_win) {
    deps += [ ":libc" ]
  }
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("unicode_width") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/unicode-width-0.1.14/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/unicode-width-0.1.14/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/vendor/unicode-width-0.1.14/src/tables.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.1.14"
  cargo_pkg_authors =
      "kwantam <kwantam@gmail.com>, Manish Goregaokar <manishsmail@gmail.com>"
  cargo_pkg_name = "unicode-width"
  cargo_pkg_description = "Determine displayed width of `char` and `str` types according to Unicode Standard Annex #11 rules."
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":compiler_builtins",
    ":rustc_std_workspace_core",
    ":rustc_std_workspace_std",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  aliased_deps = {
    core = ":rustc_std_workspace_core"
    std = ":rustc_std_workspace_std"
  }
  features = [
    "cjk",
    "compiler_builtins",
    "core",
    "rustc-dep-of-std",
    "std",
  ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("unwind") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/unwind/src/lib.rs"
  sources = [
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/unwind/src/lib.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/unwind/src/libunwind.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/unwind/src/unwinding.rs",
    "//third_party/rust-toolchain/lib/rustlib/src/rust/library/unwind/src/wasm.rs",
  ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.0.0"
  cargo_pkg_name = "unwind"
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    ":cfg_if",
    ":compiler_builtins",
    ":core",
    "//build/rust/std:profiler_builtins_group",
    "//build/rust/std:std_build_deps",
  ]
  if (!is_win) {
    deps += [ ":libc" ]
  }
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
    "-Zlink-directives=false",
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
cargo_crate("windows_targets") {
  crate_type = "rlib"
  crate_root = "//third_party/rust-toolchain/lib/rustlib/src/rust/library/windows_targets/src/lib.rs"
  sources = [ "//third_party/rust-toolchain/lib/rustlib/src/rust/library/windows_targets/src/lib.rs" ]
  inputs = []
  no_std = true

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "0.0.0"
  cargo_pkg_name = "windows-targets"
  cargo_pkg_description = "A drop-in replacement for the real windows-targets crate for use in std only."
  library_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
    "//build/config/coverage:default_coverage",
  ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:disallow_unstable_features",
  ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [ "//build/rust/std:std_build_deps" ]
  rustenv = [
    "CFG_DISABLE_UNSTABLE_FEATURES=0",
    "STD_ENV_ARCH=$rust_target_arch",
  ]
  rustflags = [
    "--cfg=backtrace_in_libstd",
    "-Zforce-unstable-if-unmarked",
    "--cap-lints=allow",  # Suppress all warnings in stdlib crates
  ]
  output_dir =
      "$root_out_dir/local_rustc_sysroot/lib/rustlib/$rust_abi_target/lib/"
}
