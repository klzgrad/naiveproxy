import("//build/config/linux/pkg_config.gni")
import("//build/shim_headers.gni")

pkg_config("system_absl_btree") {
  packages = [ "absl_btree" ]
}

pkg_config("system_absl_fixed_array") {
  packages = [ "absl_fixed_array" ]
}

pkg_config("system_absl_flat_hash_map") {
  packages = [ "absl_flat_hash_map" ]
}

pkg_config("system_absl_flat_hash_set") {
  packages = [ "absl_flat_hash_set" ]
}

pkg_config("system_absl_inlined_vector") {
  packages = [ "absl_inlined_vector" ]
}

pkg_config("system_absl_node_hash_map") {
  packages = [ "absl_node_hash_map" ]
}

pkg_config("system_absl_node_hash_set") {
  packages = [ "absl_node_hash_set" ]
}

shim_headers("btree_shim") {
  root_path = "."
  prefix = "absl/container/"
  headers = [
    "btree_map.h",
    "btree_set.h",
  ]
}

source_set("btree") {
  deps = [ ":btree_shim" ]
  public_configs = [ ":system_absl_btree" ]
}

shim_headers("fixed_array_shim") {
  root_path = "."
  prefix = "absl/container/"
  headers = [ "fixed_array.h" ]
}

source_set("fixed_array") {
  deps = [ ":fixed_array_shim" ]
  public_configs = [ ":system_absl_fixed_array" ]
}

shim_headers("flat_hash_map_shim") {
  root_path = "."
  prefix = "absl/container/"
  headers = [ "flat_hash_map.h" ]
}

source_set("flat_hash_map") {
  deps = [ ":flat_hash_map_shim" ]
  public_configs = [ ":system_absl_flat_hash_map" ]
}

shim_headers("flat_hash_set_shim") {
  root_path = "."
  prefix = "absl/container/"
  headers = [ "flat_hash_set.h" ]
}

source_set("flat_hash_set") {
  deps = [ ":flat_hash_set_shim" ]
  public_configs = [ ":system_absl_flat_hash_set" ]
}

shim_headers("inlined_vector_shim") {
  root_path = "."
  prefix = "absl/container/"
  headers = [ "inlined_vector.h" ]
}

source_set("inlined_vector") {
  deps = [ ":inlined_vector_shim" ]
  public_configs = [ ":system_absl_inlined_vector" ]
}

shim_headers("node_hash_map_shim") {
  root_path = "."
  prefix = "absl/container/"
  headers = [ "node_hash_map.h" ]
}

source_set("node_hash_map") {
  deps = [ ":node_hash_map_shim" ]
  public_configs = [ ":system_absl_node_hash_map" ]
}

shim_headers("node_hash_set_shim") {
  root_path = "."
  prefix = "absl/container/"
  headers = [ "node_hash_set.h" ]
}

source_set("node_hash_set") {
  deps = [ ":node_hash_set_shim" ]
  public_configs = [ ":system_absl_node_hash_set" ]
}

source_set("common_policy_traits_test") {
}
source_set("fixed_array_test") {
}
source_set("flat_hash_map_test") {
}
source_set("flat_hash_set_test") {
}
source_set("hash_function_defaults_test") {
}
source_set("inlined_vector_test") {
}
source_set("node_slot_policy_test") {
}
source_set("raw_hash_set_allocator_test") {
}
source_set("raw_hash_set_test") {
}
source_set("sample_element_size_test") {
}
