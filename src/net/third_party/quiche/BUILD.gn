# Copyright 2020 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# Build file for QUICHE, <https://quiche.googlesource.com/quiche/>
#
# The following build targets are defined:
#   - quiche -- the part of QUICHE that is shipped within Chromium proper.
#   - *_tool_support -- support code used in CLI tools and unit tests.
#   - *_test_support -- support code only used in unit tests.
#   - quiche_tests -- all of the QUICHE test targets.
#
# There are two kinds of build target: quiche_ and epoll_; quiche_ targets are
# built on all platforms, epoll_ targets are only built on Linux and certain
# similar platforms.

# Dependency graph of the key targets in this file:
#
#     quiche <--- quiche_tool_support <--- quiche_test_support <--- quiche_tests
#                          ^                        ^                     |
#                          |                        |                     |
#                          |                        |                     |
#                  epoll_tool_support <---  epoll_test_support <----------+ (*)
#
#             (*) only used on platforms where epoll tests are built

import("//net/third_party/quiche/src/build/source_list.gni")
import("//testing/libfuzzer/fuzzer_test.gni")
import("//third_party/protobuf/proto_library.gni")

build_epoll_based_tools = is_linux || is_chromeos

config("quiche_internal_config") {
  cflags = []
  if (is_clang) {
    cflags += [ "-Wno-sign-compare" ]
  }
}

config("quiche_config") {
  include_dirs = [
    # The ordering here is important, since headers in overrides/ replace
    # headers in src/common/platform/default.
    "overrides",
    "src/quiche/common/platform/default",
    "src",
  ]
}

component("quiche") {
  sources = [
              "overrides/quiche_platform_impl/quiche_bug_tracker_impl.h",
              "overrides/quiche_platform_impl/quiche_client_stats_impl.h",
              "overrides/quiche_platform_impl/quiche_containers_impl.h",
              "overrides/quiche_platform_impl/quiche_export_impl.h",
              "overrides/quiche_platform_impl/quiche_iovec_impl.h",
              "overrides/quiche_platform_impl/quiche_logging_impl.h",
              "overrides/quiche_platform_impl/quiche_reference_counted_impl.h",
              "overrides/quiche_platform_impl/quiche_server_stats_impl.h",
              "overrides/quiche_platform_impl/quiche_stack_trace_impl.cc",
              "overrides/quiche_platform_impl/quiche_stack_trace_impl.h",
              "overrides/quiche_platform_impl/quiche_url_utils_impl.cc",
              "overrides/quiche_platform_impl/quiche_url_utils_impl.h",
              "src/quiche/common/platform/default/quiche_platform_impl/quiche_flags_impl.cc",
              "src/quiche/common/platform/default/quiche_platform_impl/quiche_flags_impl.h",
              "src/quiche/common/platform/default/quiche_platform_impl/quiche_time_utils_impl.cc",
              "src/quiche/common/platform/default/quiche_platform_impl/quiche_time_utils_impl.h",
              "src/quiche/http2/hpack/hpack_static_table_entries.inc",
            ] + quiche_core_hdrs + quiche_core_srcs + binary_http_srcs +
            binary_http_hdrs + oblivious_http_srcs + oblivious_http_hdrs

  configs += [ ":quiche_internal_config" ]
  all_dependent_configs = [ ":quiche_config" ]

  deps = [
    "//net/third_party/uri_template",
    "//third_party/protobuf:protobuf_lite",
    "//third_party/zlib",
  ]

  public_deps = [
    ":net_quic_proto",
    "//base",
    "//third_party/abseil-cpp:absl",
    "//third_party/boringssl",
    "//url",
  ]

  defines = [ "IS_QUICHE_IMPL" ]
}

proto_library("net_quic_proto") {
  visibility = [ ":quiche" ]

  sources = [
    "src/quiche/quic/core/proto/cached_network_parameters.proto",
    "src/quiche/quic/core/proto/crypto_server_config.proto",
    "src/quiche/quic/core/proto/source_address_token.proto",
  ]
  cc_generator_options = "dllexport_decl=COMPONENT_EXPORT(QUICHE):"
  cc_include = "base/component_export.h"
  component_build_force_source_set = true

  proto_in_dir = "src"

  link_deps = [ "//base" ]

  defines = [ "IS_QUICHE_IMPL" ]

  extra_configs = [ "//build/config/compiler:wexit_time_destructors" ]
}

proto_library("net_quic_test_tools_proto") {
  visibility = [ "//net:net_public_deps" ]

  sources = [ "src/quiche/quic/test_tools/send_algorithm_test_result.proto" ]
  cc_generator_options = "dllexport_decl=NET_EXPORT_PRIVATE:"
  cc_include = "net/base/net_export.h"
  component_build_force_source_set = true

  link_deps = [ "//net:net_export_header" ]

  defines = [ "NET_IMPLEMENTATION" ]

  extra_configs = [ "//build/config/compiler:wexit_time_destructors" ]
}

if (build_epoll_based_tools) {
  static_library("epoll_tool_support") {
    testonly = true
    sources = [
                "src/quiche/common/platform/default/quiche_platform_impl/quiche_stream_buffer_allocator_impl.h",
                "src/quiche/common/platform/default/quiche_platform_impl/quiche_udp_socket_platform_impl.h",
              ] + io_tool_support_srcs + io_tool_support_hdrs

    configs += [ ":quiche_internal_config" ]
    public_configs = [ ":quiche_config" ]

    deps = [
      ":quiche_tool_support",
      "//base",
      "//net",
      "//third_party/boringssl",
    ]
  }

  executable("epoll_quic_client") {
    testonly = true
    sources = [
      "src/quiche/quic/tools/quic_client_bin.cc",
      "src/quiche/quic/tools/quic_epoll_client_factory.cc",
      "src/quiche/quic/tools/quic_epoll_client_factory.h",
    ]

    configs += [ ":quiche_internal_config" ]
    public_configs = [ ":quiche_config" ]

    deps = [
      ":epoll_tool_support",
      ":quic_client_core",
      ":quiche_tool_support",
      "//base",
      "//net",
      "//third_party/boringssl",
    ]
  }

  executable("epoll_quic_server") {
    testonly = true
    sources = [
      "src/quiche/quic/tools/quic_server_bin.cc",
      "src/quiche/quic/tools/quic_server_factory.cc",
      "src/quiche/quic/tools/quic_server_factory.h",
    ]

    configs += [ ":quiche_internal_config" ]
    public_configs = [ ":quiche_config" ]

    deps = [
      ":epoll_tool_support",
      ":quic_server_core",
      ":quiche_tool_support",
      "//base",
      "//net",
      "//third_party/boringssl",
    ]
  }

  executable("quic_client_interop_test") {
    testonly = true
    sources = [ "src/quiche/quic/tools/quic_client_interop_test_bin.cc" ]

    configs += [ ":quiche_internal_config" ]
    public_configs = [ ":quiche_config" ]

    deps = [
      ":epoll_tool_support",
      ":quiche_test_support",
      ":quiche_tool_support",
      "//net",
    ]
  }

  executable("masque_client") {
    testonly = true

    sources = [ "src/quiche/quic/masque/masque_client_bin.cc" ]

    configs += [ ":quiche_internal_config" ]
    public_configs = [ ":quiche_config" ]

    deps = [
      ":epoll_tool_support",
      ":quiche_tool_support",
      "//net",
      "//third_party/boringssl",
      "//third_party/protobuf:protobuf_lite",
    ]
  }

  executable("masque_server") {
    testonly = true
    sources = [ "src/quiche/quic/masque/masque_server_bin.cc" ]

    configs += [ ":quiche_internal_config" ]
    public_configs = [ ":quiche_config" ]

    deps = [
      ":epoll_tool_support",
      ":quiche_tool_support",
      "//net",
      "//third_party/boringssl",
      "//third_party/protobuf:protobuf_lite",
    ]
  }

  static_library("epoll_test_support") {
    testonly = true
    sources = io_test_support_srcs + io_test_support_hdrs

    configs += [ ":quiche_internal_config" ]
    public_configs = [ ":quiche_config" ]

    deps = [
      ":epoll_tool_support",
      ":quiche_test_support",
      ":quiche_tool_support",
      "//base",
      "//net",
      "//net:gtest_util",
      "//testing/gmock",
      "//testing/gtest",
    ]
  }
}

static_library("quiche_test_support") {
  testonly = true

  sources = [
              "overrides/quiche_platform_impl/quiche_expect_bug_impl.h",
              "overrides/quiche_platform_impl/quiche_test_impl.cc",
              "overrides/quiche_platform_impl/quiche_test_impl.h",
              "overrides/quiche_platform_impl/quiche_test_output_impl.cc",
              "overrides/quiche_platform_impl/quiche_test_output_impl.h",
              "src/quiche/common/platform/default/quiche_platform_impl/quiche_test_loopback_impl.cc",
              "src/quiche/common/platform/default/quiche_platform_impl/quiche_test_loopback_impl.h",
            ] + quiche_test_support_srcs + quiche_test_support_hdrs

  configs += [ ":quiche_internal_config" ]
  public_configs = [ ":quiche_config" ]

  deps = [
    ":quiche",
    ":quiche_tool_support",
    "//base",
    "//crypto:test_support",
    "//net:quic_test_flags_utils",
    "//net:test_support",
    "//testing/gmock",
    "//testing/gtest",
    "//third_party/boringssl",
    "//third_party/protobuf:protobuf_lite",
  ]
}

static_library("quiche_tool_support") {
  testonly = true
  sources = [
              "overrides/quiche_platform_impl/quiche_command_line_flags_impl.cc",
              "overrides/quiche_platform_impl/quiche_command_line_flags_impl.h",
              "overrides/quiche_platform_impl/quiche_default_proof_providers_impl.cc",
              "overrides/quiche_platform_impl/quiche_default_proof_providers_impl.h",
              "overrides/quiche_platform_impl/quiche_system_event_loop_impl.h",
              "src/quiche/common/platform/default/quiche_platform_impl/quiche_file_utils_impl.cc",
              "src/quiche/common/platform/default/quiche_platform_impl/quiche_file_utils_impl.h",
            ] + quiche_tool_support_srcs + quiche_tool_support_hdrs

  configs += [ ":quiche_internal_config" ]
  public_configs = [ ":quiche_config" ]

  deps = [
    "//base",
    "//net",
    "//third_party/protobuf:protobuf_lite",
    "//third_party/quic_trace:quic_trace_proto",
    "//url",
  ]
}

# QUICHE-provided CLI tools that don't use epoll.
if (!is_ios) {
  # The two libraries below, quic_client_core and quic_server_core, define
  # mutually exclusive command-line flags, and thus any target depending
  # directly on both will fail to build.  Only executable targets should depend
  # on those.
  source_set("quic_client_core") {
    testonly = true

    sources = [
      "src/quiche/quic/tools/quic_toy_client.cc",
      "src/quiche/quic/tools/quic_toy_client.h",
    ]

    configs += [ ":quiche_internal_config" ]
    public_configs = [ ":quiche_config" ]

    deps = [
      "//net",
      "//net:quic_test_tools",
      "//net:simple_quic_tools",
    ]
  }
  source_set("quic_server_core") {
    testonly = true
    sources = [
      "src/quiche/quic/tools/quic_toy_server.cc",
      "src/quiche/quic/tools/quic_toy_server.h",
    ]

    configs += [ ":quiche_internal_config" ]
    public_configs = [ ":quiche_config" ]

    deps = [
      "//net",
      "//net:simple_quic_tools",
    ]
  }

  executable("quic_packet_printer") {
    testonly = true

    sources = [ "src/quiche/quic/tools/quic_packet_printer_bin.cc" ]

    configs += [ ":quiche_internal_config" ]
    public_configs = [ ":quiche_config" ]

    deps = [
      "//base",
      "//build/win:default_exe_manifest",
      "//net",
      "//net:simple_quic_tools",
      "//third_party/boringssl",
      "//third_party/protobuf:protobuf_lite",
    ]
  }

  executable("quic_crypto_message_printer") {
    testonly = true

    sources = [ "src/quiche/quic/tools/crypto_message_printer_bin.cc" ]

    configs += [ ":quiche_internal_config" ]
    public_configs = [ ":quiche_config" ]

    deps = [
      "//base",
      "//build/win:default_exe_manifest",
      "//net",
      "//net:simple_quic_tools",
      "//third_party/boringssl",
      "//third_party/protobuf:protobuf_lite",
    ]
  }

  executable("quic_reject_reason_decoder") {
    testonly = true
    sources = [ "src/quiche/quic/tools/quic_reject_reason_decoder_bin.cc" ]

    configs += [ ":quiche_internal_config" ]
    public_configs = [ ":quiche_config" ]

    deps = [
      "//base",
      "//build/win:default_exe_manifest",
      "//net",
      "//net:simple_quic_tools",
      "//third_party/boringssl",
      "//third_party/protobuf:protobuf_lite",
    ]
  }

  executable("qpack_offline_decoder") {
    testonly = true

    configs += [ ":quiche_internal_config" ]
    public_configs = [ ":quiche_config" ]

    sources = [ "src/quiche/quic/tools/qpack_offline_decoder_bin.cc" ]
    deps = [
      "//base",
      "//net",
      "//net:quic_test_tools",
      "//net:simple_quic_tools",
      "//testing/gmock",
    ]
  }
}

bundle_data("test_data") {
  visibility = [ ":quiche_tests" ]
  testonly = true
  sources = [
    "src/quiche/common/platform/api/testdir/README.md",
    "src/quiche/common/platform/api/testdir/a/b/c/d/e",
    "src/quiche/common/platform/api/testdir/a/subdir/testfile",
    "src/quiche/common/platform/api/testdir/a/z",
    "src/quiche/common/platform/api/testdir/testfile",
  ]
  outputs = [ "{{bundle_resources_dir}}/" +
              "{{source_root_relative_dir}}/{{source_file_part}}" ]
}

source_set("quiche_tests") {
  testonly = true

  sources = [
    "src/quiche/binary_http/binary_http_message_test.cc",
    "src/quiche/blind_sign_auth/blind_sign_auth_test.cc",
    "src/quiche/blind_sign_auth/cached_blind_sign_auth_test.cc",
    "src/quiche/common/btree_scheduler_test.cc",
    "src/quiche/common/bug_utils_test.cc",
    "src/quiche/common/capsule_test.cc",
    "src/quiche/common/http/http_header_block_test.cc",
    "src/quiche/common/http/http_header_storage_test.cc",
    "src/quiche/common/masque/connect_ip_datagram_payload_test.cc",
    "src/quiche/common/masque/connect_udp_datagram_payload_test.cc",
    "src/quiche/common/platform/api/quiche_file_utils_test.cc",
    "src/quiche/common/platform/api/quiche_hostname_utils_test.cc",
    "src/quiche/common/platform/api/quiche_lower_case_string_test.cc",
    "src/quiche/common/platform/api/quiche_mem_slice_test.cc",
    "src/quiche/common/platform/api/quiche_reference_counted_test.cc",
    "src/quiche/common/platform/api/quiche_stack_trace_test.cc",
    "src/quiche/common/platform/api/quiche_time_utils_test.cc",
    "src/quiche/common/platform/api/quiche_url_utils_test.cc",
    "src/quiche/common/print_elements_test.cc",
    "src/quiche/common/quiche_buffer_allocator_test.cc",
    "src/quiche/common/quiche_callbacks_test.cc",
    "src/quiche/common/quiche_circular_deque_test.cc",
    "src/quiche/common/quiche_data_reader_test.cc",
    "src/quiche/common/quiche_data_writer_test.cc",
    "src/quiche/common/quiche_endian_test.cc",
    "src/quiche/common/quiche_ip_address_test.cc",
    "src/quiche/common/quiche_linked_hash_map_test.cc",
    "src/quiche/common/quiche_mem_slice_storage_test.cc",
    "src/quiche/common/quiche_random_test.cc",
    "src/quiche/common/quiche_simple_arena_test.cc",
    "src/quiche/common/quiche_socket_address_test.cc",
    "src/quiche/common/quiche_text_utils_test.cc",
    "src/quiche/common/simple_buffer_allocator_test.cc",
    "src/quiche/common/structured_headers_generated_test.cc",
    "src/quiche/common/structured_headers_test.cc",
    "src/quiche/common/test_tools/mock_streams_test.cc",
    "src/quiche/common/test_tools/quiche_test_utils_test.cc",
    "src/quiche/common/wire_serialization_test.cc",
    "src/quiche/http2/adapter/event_forwarder_test.cc",
    "src/quiche/http2/adapter/header_validator_test.cc",
    "src/quiche/http2/adapter/noop_header_validator_test.cc",
    "src/quiche/http2/adapter/oghttp2_adapter_metadata_test.cc",
    "src/quiche/http2/adapter/oghttp2_adapter_test.cc",
    "src/quiche/http2/adapter/oghttp2_session_test.cc",
    "src/quiche/http2/adapter/oghttp2_util_test.cc",
    "src/quiche/http2/adapter/recording_http2_visitor_test.cc",
    "src/quiche/http2/adapter/window_manager_test.cc",
    "src/quiche/http2/core/array_output_buffer_test.cc",
    "src/quiche/http2/core/http2_constants_test.cc",
    "src/quiche/http2/core/http2_structures_test.cc",
    "src/quiche/http2/core/priority_write_scheduler_test.cc",
    "src/quiche/http2/core/spdy_alt_svc_wire_format_test.cc",
    "src/quiche/http2/core/spdy_frame_builder_test.cc",
    "src/quiche/http2/core/spdy_framer_test.cc",
    "src/quiche/http2/core/spdy_protocol_test.cc",
    "src/quiche/http2/decoder/decode_buffer_test.cc",
    "src/quiche/http2/decoder/decode_http2_structures_test.cc",
    "src/quiche/http2/decoder/http2_frame_decoder_test.cc",
    "src/quiche/http2/decoder/http2_structure_decoder_test.cc",
    "src/quiche/http2/decoder/payload_decoders/altsvc_payload_decoder_test.cc",
    "src/quiche/http2/decoder/payload_decoders/continuation_payload_decoder_test.cc",
    "src/quiche/http2/decoder/payload_decoders/data_payload_decoder_test.cc",
    "src/quiche/http2/decoder/payload_decoders/goaway_payload_decoder_test.cc",
    "src/quiche/http2/decoder/payload_decoders/headers_payload_decoder_test.cc",
    "src/quiche/http2/decoder/payload_decoders/ping_payload_decoder_test.cc",
    "src/quiche/http2/decoder/payload_decoders/priority_payload_decoder_test.cc",
    "src/quiche/http2/decoder/payload_decoders/priority_update_payload_decoder_test.cc",
    "src/quiche/http2/decoder/payload_decoders/push_promise_payload_decoder_test.cc",
    "src/quiche/http2/decoder/payload_decoders/rst_stream_payload_decoder_test.cc",
    "src/quiche/http2/decoder/payload_decoders/settings_payload_decoder_test.cc",
    "src/quiche/http2/decoder/payload_decoders/unknown_payload_decoder_test.cc",
    "src/quiche/http2/decoder/payload_decoders/window_update_payload_decoder_test.cc",
    "src/quiche/http2/hpack/decoder/hpack_block_collector_test.cc",
    "src/quiche/http2/hpack/decoder/hpack_block_decoder_test.cc",
    "src/quiche/http2/hpack/decoder/hpack_decoder_state_test.cc",
    "src/quiche/http2/hpack/decoder/hpack_decoder_string_buffer_test.cc",
    "src/quiche/http2/hpack/decoder/hpack_decoder_tables_test.cc",
    "src/quiche/http2/hpack/decoder/hpack_decoder_test.cc",
    "src/quiche/http2/hpack/decoder/hpack_entry_collector_test.cc",
    "src/quiche/http2/hpack/decoder/hpack_entry_decoder_test.cc",
    "src/quiche/http2/hpack/decoder/hpack_entry_type_decoder_test.cc",
    "src/quiche/http2/hpack/decoder/hpack_string_decoder_test.cc",
    "src/quiche/http2/hpack/decoder/hpack_whole_entry_buffer_test.cc",
    "src/quiche/http2/hpack/hpack_decoder_adapter_test.cc",
    "src/quiche/http2/hpack/hpack_encoder_test.cc",
    "src/quiche/http2/hpack/hpack_entry_test.cc",
    "src/quiche/http2/hpack/hpack_header_table_test.cc",
    "src/quiche/http2/hpack/hpack_output_stream_test.cc",
    "src/quiche/http2/hpack/hpack_round_trip_test.cc",
    "src/quiche/http2/hpack/hpack_static_table_test.cc",
    "src/quiche/http2/hpack/http2_hpack_constants_test.cc",
    "src/quiche/http2/hpack/huffman/hpack_huffman_decoder_test.cc",
    "src/quiche/http2/hpack/huffman/hpack_huffman_encoder_test.cc",
    "src/quiche/http2/hpack/huffman/hpack_huffman_transcoder_test.cc",
    "src/quiche/http2/hpack/varint/hpack_varint_decoder_test.cc",
    "src/quiche/http2/hpack/varint/hpack_varint_encoder_test.cc",
    "src/quiche/http2/hpack/varint/hpack_varint_round_trip_test.cc",
    "src/quiche/http2/test_tools/hpack_block_builder_test.cc",
    "src/quiche/http2/test_tools/hpack_example_test.cc",
    "src/quiche/http2/test_tools/http2_frame_builder_test.cc",
    "src/quiche/http2/test_tools/http2_random_test.cc",
    "src/quiche/http2/test_tools/random_decoder_test_base_test.cc",
    "src/quiche/oblivious_http/buffers/oblivious_http_integration_test.cc",
    "src/quiche/oblivious_http/buffers/oblivious_http_request_test.cc",
    "src/quiche/oblivious_http/buffers/oblivious_http_response_test.cc",
    "src/quiche/oblivious_http/common/oblivious_http_header_key_config_test.cc",
    "src/quiche/oblivious_http/oblivious_http_client_test.cc",
    "src/quiche/oblivious_http/oblivious_http_gateway_test.cc",
    "src/quiche/quic/core/congestion_control/bandwidth_sampler_test.cc",
    "src/quiche/quic/core/congestion_control/bbr2_simulator_test.cc",
    "src/quiche/quic/core/congestion_control/bbr_sender_test.cc",
    "src/quiche/quic/core/congestion_control/cubic_bytes_test.cc",
    "src/quiche/quic/core/congestion_control/general_loss_algorithm_test.cc",
    "src/quiche/quic/core/congestion_control/hybrid_slow_start_test.cc",
    "src/quiche/quic/core/congestion_control/pacing_sender_test.cc",
    "src/quiche/quic/core/congestion_control/prr_sender_test.cc",
    "src/quiche/quic/core/congestion_control/rtt_stats_test.cc",
    "src/quiche/quic/core/congestion_control/send_algorithm_test.cc",
    "src/quiche/quic/core/congestion_control/tcp_cubic_sender_bytes_test.cc",
    "src/quiche/quic/core/congestion_control/uber_loss_algorithm_test.cc",
    "src/quiche/quic/core/congestion_control/windowed_filter_test.cc",
    "src/quiche/quic/core/crypto/aes_128_gcm_12_decrypter_test.cc",
    "src/quiche/quic/core/crypto/aes_128_gcm_12_encrypter_test.cc",
    "src/quiche/quic/core/crypto/aes_128_gcm_decrypter_test.cc",
    "src/quiche/quic/core/crypto/aes_128_gcm_encrypter_test.cc",
    "src/quiche/quic/core/crypto/aes_256_gcm_decrypter_test.cc",
    "src/quiche/quic/core/crypto/aes_256_gcm_encrypter_test.cc",
    "src/quiche/quic/core/crypto/cert_compressor_test.cc",
    "src/quiche/quic/core/crypto/certificate_util_test.cc",
    "src/quiche/quic/core/crypto/certificate_view_test.cc",
    "src/quiche/quic/core/crypto/chacha20_poly1305_decrypter_test.cc",
    "src/quiche/quic/core/crypto/chacha20_poly1305_encrypter_test.cc",
    "src/quiche/quic/core/crypto/chacha20_poly1305_tls_decrypter_test.cc",
    "src/quiche/quic/core/crypto/chacha20_poly1305_tls_encrypter_test.cc",
    "src/quiche/quic/core/crypto/channel_id_test.cc",
    "src/quiche/quic/core/crypto/client_proof_source_test.cc",
    "src/quiche/quic/core/crypto/crypto_framer_test.cc",
    "src/quiche/quic/core/crypto/crypto_handshake_message_test.cc",
    "src/quiche/quic/core/crypto/crypto_secret_boxer_test.cc",
    "src/quiche/quic/core/crypto/crypto_server_test.cc",
    "src/quiche/quic/core/crypto/crypto_utils_test.cc",
    "src/quiche/quic/core/crypto/curve25519_key_exchange_test.cc",
    "src/quiche/quic/core/crypto/null_decrypter_test.cc",
    "src/quiche/quic/core/crypto/null_encrypter_test.cc",
    "src/quiche/quic/core/crypto/p256_key_exchange_test.cc",
    "src/quiche/quic/core/crypto/proof_source_x509_test.cc",
    "src/quiche/quic/core/crypto/quic_client_session_cache_test.cc",
    "src/quiche/quic/core/crypto/quic_compressed_certs_cache_test.cc",
    "src/quiche/quic/core/crypto/quic_crypto_client_config_test.cc",
    "src/quiche/quic/core/crypto/quic_crypto_server_config_test.cc",
    "src/quiche/quic/core/crypto/quic_hkdf_test.cc",
    "src/quiche/quic/core/crypto/transport_parameters_test.cc",
    "src/quiche/quic/core/crypto/web_transport_fingerprint_proof_verifier_test.cc",
    "src/quiche/quic/core/deterministic_connection_id_generator_test.cc",
    "src/quiche/quic/core/frames/quic_frames_test.cc",
    "src/quiche/quic/core/http/http_decoder_test.cc",
    "src/quiche/quic/core/http/http_encoder_test.cc",
    "src/quiche/quic/core/http/http_frames_test.cc",
    "src/quiche/quic/core/http/quic_header_list_test.cc",
    "src/quiche/quic/core/http/quic_headers_stream_test.cc",
    "src/quiche/quic/core/http/quic_receive_control_stream_test.cc",
    "src/quiche/quic/core/http/quic_send_control_stream_test.cc",
    "src/quiche/quic/core/http/quic_server_session_base_test.cc",
    "src/quiche/quic/core/http/quic_spdy_session_test.cc",
    "src/quiche/quic/core/http/quic_spdy_stream_body_manager_test.cc",
    "src/quiche/quic/core/http/quic_spdy_stream_test.cc",
    "src/quiche/quic/core/http/spdy_utils_test.cc",
    "src/quiche/quic/core/http/web_transport_http3_test.cc",
    "src/quiche/quic/core/internet_checksum_test.cc",
    "src/quiche/quic/core/legacy_quic_stream_id_manager_test.cc",
    "src/quiche/quic/core/packet_number_indexed_queue_test.cc",
    "src/quiche/quic/core/qpack/qpack_decoded_headers_accumulator_test.cc",
    "src/quiche/quic/core/qpack/qpack_decoder_stream_receiver_test.cc",
    "src/quiche/quic/core/qpack/qpack_decoder_stream_sender_test.cc",
    "src/quiche/quic/core/qpack/qpack_decoder_test.cc",
    "src/quiche/quic/core/qpack/qpack_encoder_stream_receiver_test.cc",
    "src/quiche/quic/core/qpack/qpack_encoder_stream_sender_test.cc",
    "src/quiche/quic/core/qpack/qpack_encoder_test.cc",
    "src/quiche/quic/core/qpack/qpack_header_table_test.cc",
    "src/quiche/quic/core/qpack/qpack_index_conversions_test.cc",
    "src/quiche/quic/core/qpack/qpack_instruction_decoder_test.cc",
    "src/quiche/quic/core/qpack/qpack_instruction_encoder_test.cc",
    "src/quiche/quic/core/qpack/qpack_receive_stream_test.cc",
    "src/quiche/quic/core/qpack/qpack_required_insert_count_test.cc",
    "src/quiche/quic/core/qpack/qpack_round_trip_test.cc",
    "src/quiche/quic/core/qpack/qpack_send_stream_test.cc",
    "src/quiche/quic/core/qpack/qpack_static_table_test.cc",
    "src/quiche/quic/core/qpack/value_splitting_header_list_test.cc",
    "src/quiche/quic/core/quic_alarm_test.cc",
    "src/quiche/quic/core/quic_arena_scoped_ptr_test.cc",
    "src/quiche/quic/core/quic_bandwidth_test.cc",
    "src/quiche/quic/core/quic_buffered_packet_store_test.cc",
    "src/quiche/quic/core/quic_chaos_protector_test.cc",
    "src/quiche/quic/core/quic_coalesced_packet_test.cc",
    "src/quiche/quic/core/quic_config_test.cc",
    "src/quiche/quic/core/quic_connection_alarms_test.cc",
    "src/quiche/quic/core/quic_connection_context_test.cc",
    "src/quiche/quic/core/quic_connection_id_manager_test.cc",
    "src/quiche/quic/core/quic_connection_id_test.cc",
    "src/quiche/quic/core/quic_connection_test.cc",
    "src/quiche/quic/core/quic_control_frame_manager_test.cc",
    "src/quiche/quic/core/quic_crypto_client_handshaker_test.cc",
    "src/quiche/quic/core/quic_crypto_client_stream_test.cc",
    "src/quiche/quic/core/quic_crypto_server_stream_test.cc",
    "src/quiche/quic/core/quic_crypto_stream_test.cc",
    "src/quiche/quic/core/quic_data_writer_test.cc",
    "src/quiche/quic/core/quic_datagram_queue_test.cc",
    "src/quiche/quic/core/quic_dispatcher_test.cc",
    "src/quiche/quic/core/quic_error_codes_test.cc",
    "src/quiche/quic/core/quic_flow_controller_test.cc",
    "src/quiche/quic/core/quic_framer_test.cc",
    "src/quiche/quic/core/quic_generic_session_test.cc",
    "src/quiche/quic/core/quic_idle_network_detector_test.cc",
    "src/quiche/quic/core/quic_interval_deque_test.cc",
    "src/quiche/quic/core/quic_interval_set_test.cc",
    "src/quiche/quic/core/quic_interval_test.cc",
    "src/quiche/quic/core/quic_lru_cache_test.cc",
    "src/quiche/quic/core/quic_network_blackhole_detector_test.cc",
    "src/quiche/quic/core/quic_one_block_arena_test.cc",
    "src/quiche/quic/core/quic_packet_creator_test.cc",
    "src/quiche/quic/core/quic_packet_number_test.cc",
    "src/quiche/quic/core/quic_packets_test.cc",
    "src/quiche/quic/core/quic_path_validator_test.cc",
    "src/quiche/quic/core/quic_ping_manager_test.cc",
    "src/quiche/quic/core/quic_received_packet_manager_test.cc",
    "src/quiche/quic/core/quic_sent_packet_manager_test.cc",
    "src/quiche/quic/core/quic_server_id_test.cc",
    "src/quiche/quic/core/quic_session_test.cc",
    "src/quiche/quic/core/quic_socket_address_coder_test.cc",
    "src/quiche/quic/core/quic_stream_id_manager_test.cc",
    "src/quiche/quic/core/quic_stream_priority_test.cc",
    "src/quiche/quic/core/quic_stream_send_buffer_test.cc",
    "src/quiche/quic/core/quic_stream_sequencer_buffer_test.cc",
    "src/quiche/quic/core/quic_stream_sequencer_test.cc",
    "src/quiche/quic/core/quic_stream_test.cc",
    "src/quiche/quic/core/quic_sustained_bandwidth_recorder_test.cc",
    "src/quiche/quic/core/quic_tag_test.cc",
    "src/quiche/quic/core/quic_time_accumulator_test.cc",
    "src/quiche/quic/core/quic_time_test.cc",
    "src/quiche/quic/core/quic_time_wait_list_manager_test.cc",
    "src/quiche/quic/core/quic_trace_visitor_test.cc",
    "src/quiche/quic/core/quic_unacked_packet_map_test.cc",
    "src/quiche/quic/core/quic_utils_test.cc",
    "src/quiche/quic/core/quic_version_manager_test.cc",
    "src/quiche/quic/core/quic_versions_test.cc",
    "src/quiche/quic/core/quic_write_blocked_list_test.cc",
    "src/quiche/quic/core/tls_chlo_extractor_test.cc",
    "src/quiche/quic/core/tls_client_handshaker_test.cc",
    "src/quiche/quic/core/tls_server_handshaker_test.cc",
    "src/quiche/quic/core/uber_quic_stream_id_manager_test.cc",
    "src/quiche/quic/core/uber_received_packet_manager_test.cc",
    "src/quiche/quic/test_tools/crypto_test_utils_test.cc",
    "src/quiche/quic/test_tools/quic_test_utils_test.cc",
    "src/quiche/quic/test_tools/simple_session_notifier_test.cc",
    "src/quiche/quic/test_tools/simulator/quic_endpoint_test.cc",
    "src/quiche/quic/test_tools/simulator/simulator_test.cc",
    "src/quiche/quic/test_tools/test_ip_packets_test.cc",
    "src/quiche/quic/tools/connect_tunnel_test.cc",
    "src/quiche/quic/tools/connect_udp_tunnel_test.cc",
    "src/quiche/quic/tools/quic_memory_cache_backend_test.cc",
    "src/quiche/quic/tools/quic_tcp_like_trace_converter_test.cc",
    "src/quiche/quic/tools/simple_ticket_crypter_test.cc",
    "src/quiche/web_transport/encapsulated/encapsulated_web_transport_test.cc",
    "src/quiche/web_transport/test_tools/in_memory_stream_test.cc",
    "src/quiche/web_transport/web_transport_headers_test.cc",
  ]

  data = [ "src/quiche/common/platform/api/testdir/" ]

  configs += [ ":quiche_internal_config" ]
  public_configs = [ ":quiche_config" ]

  deps = [
    ":blind_sign_auth",
    ":blind_sign_auth_test_support",
    "//net",
    "//net:quic_test_tools",
    "//net:simple_quic_tools",
    "//net:spdy_test_tools",
    "//testing/gmock",
    "//testing/gtest",
  ]
  if (is_ios) {
    deps += [ ":test_data" ]
  }
  public_deps = []

  if (build_epoll_based_tools) {
    sources += [
      "overrides/quiche_platform_impl/quiche_command_line_flags_test.cc",
      "src/quiche/quic/core/chlo_extractor_test.cc",
      "src/quiche/quic/core/http/end_to_end_test.cc",
      "src/quiche/quic/core/http/quic_spdy_client_session_test.cc",
      "src/quiche/quic/core/http/quic_spdy_client_stream_test.cc",
      "src/quiche/quic/core/http/quic_spdy_server_stream_base_test.cc",
      "src/quiche/quic/core/io/event_loop_connecting_client_socket_test.cc",
      "src/quiche/quic/core/io/quic_all_event_loops_test.cc",
      "src/quiche/quic/core/io/quic_poll_event_loop_test.cc",
      "src/quiche/quic/core/io/socket_test.cc",
      "src/quiche/quic/tools/quic_default_client_test.cc",
      "src/quiche/quic/tools/quic_server_test.cc",
      "src/quiche/quic/tools/quic_simple_server_session_test.cc",
      "src/quiche/quic/tools/quic_simple_server_stream_test.cc",
      "src/quiche/quic/tools/quic_url_test.cc",
    ]
    public_deps += [
      ":epoll_test_support",
      ":epoll_tool_support",
    ]
  }
}

fuzzer_test("net_quic_framer_fuzzer") {
  sources = [ "src/quiche/quic/test_tools/fuzzing/quic_framer_fuzzer.cc" ]

  deps = [
    "//net",
    "//net:net_fuzzer_test_support",
    "//net:quic_test_tools",
    "//net:test_support",
    "//net/data/ssl/certificates:generate_fuzzer_cert_includes",
  ]
}

fuzzer_test("net_quic_framer_process_data_packet_fuzzer") {
  sources = [ "src/quiche/quic/test_tools/fuzzing/quic_framer_process_data_packet_fuzzer.cc" ]

  deps = [
    "//net",
    "//net:net_fuzzer_test_support",
    "//net:quic_test_tools",
    "//net:test_support",
    "//net/data/ssl/certificates:generate_fuzzer_cert_includes",
  ]
}

fuzzer_test("net_qpack_decoder_fuzzer") {
  sources = [ "src/quiche/quic/core/qpack/fuzzer/qpack_decoder_fuzzer.cc" ]
  deps = [
    "//base",
    "//net",
    "//net:net_fuzzer_test_support",
    "//net:quic_test_tools",
    "//net:test_support",
  ]
}

fuzzer_test("net_qpack_encoder_stream_receiver_fuzzer") {
  sources = [
    "src/quiche/quic/core/qpack/fuzzer/qpack_encoder_stream_receiver_fuzzer.cc",
  ]
  deps = [
    "//base",
    "//net",
    "//net:net_fuzzer_test_support",
  ]
}

fuzzer_test("net_qpack_encoder_stream_sender_fuzzer") {
  sources = [
    "src/quiche/quic/core/qpack/fuzzer/qpack_encoder_stream_sender_fuzzer.cc",
  ]
  deps = [
    "//base",
    "//net",
    "//net:net_fuzzer_test_support",
    "//net:quic_test_tools",
    "//net:test_support",
  ]
}

fuzzer_test("net_qpack_round_trip_fuzzer") {
  sources = [ "src/quiche/quic/core/qpack/fuzzer/qpack_round_trip_fuzzer.cc" ]
  deps = [
    "//base",
    "//net",
    "//net:net_fuzzer_test_support",
    "//net:quic_test_tools",
    "//net:test_support",
  ]
}

component("blind_sign_auth") {
  sources = [
    "src/quiche/blind_sign_auth/blind_sign_auth.cc",
    "src/quiche/blind_sign_auth/blind_sign_auth.h",
    "src/quiche/blind_sign_auth/blind_sign_auth_interface.h",
    "src/quiche/blind_sign_auth/blind_sign_message_interface.h",
    "src/quiche/blind_sign_auth/blind_sign_message_response.cc",
    "src/quiche/blind_sign_auth/blind_sign_message_response.h",
    "src/quiche/blind_sign_auth/cached_blind_sign_auth.cc",
    "src/quiche/blind_sign_auth/cached_blind_sign_auth.h",
  ]
  configs += [ ":quiche_internal_config" ]
  public_configs = [ ":quiche_config" ]

  deps = [
    ":quiche",
    "//base",
    "//third_party/abseil-cpp:absl",
    "//third_party/anonymous_tokens:rsa_bssa_public_metadata_client",
    "//third_party/boringssl",
    "//url",
  ]

  public_deps = [
    ":blind_sign_auth_proto",
    "//third_party/anonymous_tokens:anonymous_tokens_rsa_bssa_client",
    "//third_party/anonymous_tokens:crypto_utils",
    "//third_party/anonymous_tokens:proto_utils",
    "//third_party/anonymous_tokens:tokens_encodings",
  ]

  defines = [ "IS_QUICHE_IMPL" ]
}

# Do not depend on this target from outside the component. Depend on
# :blind_sign_auth instead.
proto_library("blind_sign_auth_proto") {
  visibility = [
    ":blind_sign_auth",
    ":blind_sign_auth_test_support",
    ":quiche",
    ":quiche_tests",
  ]

  sources = protobuf_blind_sign_auth
  cc_generator_options = "lite=true,dllexport_decl=COMPONENT_EXPORT(QUICHE):"
  cc_include = "base/component_export.h"
  component_build_force_source_set = true

  proto_in_dir = "src"

  link_public_deps = [ "//base" ]

  deps = [ "//third_party/anonymous_tokens:anonymous_tokens_cc_proto" ]

  import_dirs = [ "//third_party/anonymous_tokens/src/" ]

  defines = [ "IS_QUICHE_IMPL" ]

  extra_configs = [ "//build/config/compiler:wexit_time_destructors" ]
}

source_set("blind_sign_auth_test_support") {
  visibility = [ ":quiche_tests" ]
  testonly = true
  sources = [
    "src/quiche/blind_sign_auth/test_tools/mock_blind_sign_auth_interface.h",
    "src/quiche/blind_sign_auth/test_tools/mock_blind_sign_message_interface.h",
  ]
  configs += [ ":quiche_internal_config" ]
  public_configs = [ ":quiche_config" ]

  deps = [
    ":blind_sign_auth",
    ":quiche",
    ":quiche_test_support",
    ":quiche_tool_support",
  ]
  public_deps =
      [ "//third_party/anonymous_tokens:anonymous_tokens_test_support" ]
}

if (is_android) {
  import("//build/config/android/rules.gni")

  proto_java_library("blind_sign_auth_proto_java") {
    visibility = [
      "//components/ip_protection/*",
      "//net/third_party/quiche/*",
    ]

    proto_path = "src/"

    sources = [
      "src/quiche/blind_sign_auth/proto/any.proto",
      "src/quiche/blind_sign_auth/proto/attestation.proto",
      "src/quiche/blind_sign_auth/proto/auth_and_sign.proto",
      "src/quiche/blind_sign_auth/proto/get_initial_data.proto",
      "src/quiche/blind_sign_auth/proto/key_services.proto",
      "src/quiche/blind_sign_auth/proto/proxy_layer.proto",
      "src/quiche/blind_sign_auth/proto/public_metadata.proto",
    ]

    deps = [ "//third_party/anonymous_tokens:anonymous_tokens_java_proto" ]

    import_dirs = [ "//third_party/anonymous_tokens/src/" ]
  }
}
