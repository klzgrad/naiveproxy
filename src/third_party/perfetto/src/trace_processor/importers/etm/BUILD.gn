# Copyright (C) 2024 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../../../gn/perfetto.gni")
import("../../../../gn/test.gni")

assert(enable_perfetto_etm_importer)

group("etm") {
  public_deps = [ ":public_hdr" ]
  deps = [ ":etm_impl" ]
}

source_set("public_hdr") {
  visibility = [
    ":etm",
    ":etm_impl",
  ]
  sources = [
    "etm_tracker.h",
    "etm_v4_stream_demultiplexer.h",
  ]

  deps = [
    "../../../../gn:default_deps",
    "../../../../include/perfetto/ext/base:base",
    "../../../../include/perfetto/trace_processor:storage",
    "../../tables",
    "../../types",
  ]
}

source_set("etm_impl") {
  visibility = [
    ":etm",
    ":unittests",
    "../../perfetto_sql/intrinsics/operators:etm_impl",
  ]
  sources = [
    "element_cursor.cc",
    "element_cursor.h",
    "error_logger.cc",
    "error_logger.h",
    "etm_tracker.cc",
    "etm_v4_decoder.cc",
    "etm_v4_decoder.h",
    "etm_v4_stream.cc",
    "etm_v4_stream.h",
    "etm_v4_stream_demultiplexer.cc",
    "frame_decoder.cc",
    "frame_decoder.h",
    "mapping_version.cc",
    "mapping_version.h",
    "opencsd.h",
    "sql_values.h",
    "storage_handle.cc",
    "storage_handle.h",
    "target_memory.cc",
    "target_memory.h",
    "target_memory_reader.cc",
    "target_memory_reader.h",
    "types.cc",
    "types.h",
    "util.cc",
    "util.h",
    "virtual_address_space.cc",
    "virtual_address_space.h",
  ]

  public_deps = [ "../../../../gn:open_csd" ]

  deps = [
    ":file_tracker",
    ":public_hdr",
    "../../../../gn:default_deps",
    "../../../../include/perfetto/base:base",
    "../../db/column",
    "../../storage",
    "../../tables:tables_python",
    "../../types",
    "../../util:build_id",
    "../common",
    "../elf:binary_info",
    "../perf",
    "../perf:record",
  ]
}

source_set("file_tracker") {
  sources = [
    "elf_tracker.cc",
    "elf_tracker.h",
    "file_tracker.cc",
    "file_tracker.h",
  ]

  deps = [
    "../../../../gn:default_deps",
    "../../../../include/perfetto/ext/base:base",
    "../../../../include/perfetto/trace_processor:storage",
    "../../storage",
    "../../tables:tables_python",
    "../../types",
    "../../util:build_id",
    "../elf:binary_info",
  ]
}

perfetto_unittest_source_set("unittests") {
  testonly = true
  sources = [ "virtual_address_space_unittest.cc" ]
  deps = [
    ":etm_impl",
    "../../../../gn:default_deps",
    "../../../../gn:gtest_and_gmock",
    "../../../base",
    "../../storage",
    "../../tables:tables_python",
    "../../types",
  ]
}
