name: dwc3_complete_trb
ID: 726
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:__data_loc char[] name;	offset:8;	size:4;	signed:0;
	field:struct dwc3_trb * trb;	offset:16;	size:8;	signed:0;
	field:u32 allocated;	offset:24;	size:4;	signed:0;
	field:u32 queued;	offset:28;	size:4;	signed:0;
	field:u32 bpl;	offset:32;	size:4;	signed:0;
	field:u32 bph;	offset:36;	size:4;	signed:0;
	field:u32 size;	offset:40;	size:4;	signed:0;
	field:u32 ctrl;	offset:44;	size:4;	signed:0;
	field:u32 type;	offset:48;	size:4;	signed:0;
	field:u32 enqueue;	offset:52;	size:4;	signed:0;
	field:u32 dequeue;	offset:56;	size:4;	signed:0;

print fmt: "%s: trb %p (E%d:D%d) buf %08x%08x size %s%d ctrl %08x (%c%c%c%c:%c%c:%s)", __get_str(name), REC->trb, REC->enqueue, REC->dequeue, REC->bph, REC->bpl, ({char *s; int pcm = ((REC->size >> 24) & 3) + 1; switch (REC->type) { case 3: case 1: switch (pcm) { case 1: s = "1x "; break; case 2: s = "2x "; break; case 3: default: s = "3x "; break; } break; default: s = ""; } s; }), ((REC->size) & (0x00ffffff)), REC->ctrl, REC->ctrl & ((((1UL))) << (0)) ? 'H' : 'h', REC->ctrl & ((((1UL))) << (1)) ? 'L' : 'l', REC->ctrl & ((((1UL))) << (2)) ? 'C' : 'c', REC->ctrl & ((((1UL))) << (3)) ? 'S' : 's', REC->ctrl & ((((1UL))) << (10)) ? 'S' : 's', REC->ctrl & ((((1UL))) << (11)) ? 'C' : 'c', dwc3_trb_type_string(((REC->ctrl) & (0x3f << 4)))
